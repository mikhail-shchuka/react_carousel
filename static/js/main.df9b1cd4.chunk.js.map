{"version":3,"sources":["components/Carousel.tsx","components/FormList.tsx","App.tsx","index.tsx"],"names":["Carousel","images","frameSize","itemWidth","animationDuration","step","infinite","useState","position","setPosition","imageStyle","width","height","transform","containerStyle","className","style","map","image","index","src","alt","disabled","type","onClick","prevPosition","length","FormList","props","setStep","setFrameSize","setItemWidth","setInfinite","setAnimationDuration","value","placeholder","name","onChange","e","target","htmlFor","checked","onSetValue","App","values","setValues","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df9b1cd4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images, frameSize, itemWidth, animationDuration, step, infinite,\n}) => {\n  const [position, setPosition] = useState(0);\n  const imageStyle = {\n    width: `${itemWidth}px`,\n    height: `${itemWidth}px`,\n    'transition-duration': `${animationDuration}ms`,\n    transform: `translateX(-${position * itemWidth}px)`,\n  };\n  const containerStyle = {\n    width: `${itemWidth * frameSize}px`,\n  };\n\n  const handlerNext = () => {\n    setPosition(prevPosition => {\n      switch (true) {\n        case infinite && prevPosition === images.length - frameSize:\n          return 0;\n        case prevPosition + step > images.length - frameSize:\n          return images.length - frameSize;\n        default:\n          return prevPosition + step;\n      }\n    });\n  };\n\n  const handlerPrev = () => {\n    setPosition(prevPosition => {\n      switch (true) {\n        case infinite && prevPosition === 0:\n          return images.length - frameSize;\n        case prevPosition - step < 0:\n          return 0;\n        default:\n          return prevPosition - step;\n      }\n    });\n  };\n\n  return (\n    <div className=\"Carousel\">\n      {infinite}\n      <div className=\"container\" style={containerStyle}>\n        <div className=\"images\">\n          {images.map((image, index) => (\n            <img\n              style={imageStyle}\n              src={image}\n              alt={`${index}`}\n            />\n          ))}\n        </div>\n        <div className=\"buttons\">\n          <button\n            disabled={position === 0 && !infinite}\n            className=\"arrow\"\n            type=\"button\"\n            onClick={handlerPrev}\n          >\n            {}\n          </button>\n          <button\n            disabled={position === images.length - frameSize && !infinite}\n            className=\"arrow arrow--right\"\n            type=\"button\"\n            onClick={handlerNext}\n            data-cy=\"next\"\n          >\n            {}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import { useState } from 'react';\n\nimport './FormList.scss';\n\ntype Props = {\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean\n  onSetValue: React.Dispatch<React.SetStateAction<{\n    step: number;\n    frameSize: number;\n    itemWidth: number;\n    animationDuration: number;\n    infinite: boolean;\n  }>>\n};\n\nexport const FormList: React.FC<Props> = (props) => {\n  const [step, setStep] = useState(props.step);\n  const [frameSize, setFrameSize] = useState(props.frameSize);\n  const [itemWidth, setItemWidth] = useState(props.itemWidth);\n  const [infinite, setInfinite] = useState(props.infinite);\n  const [animationDuration,\n    setAnimationDuration] = useState(props.animationDuration);\n\n  return (\n    <form>\n      <input\n        className=\"input\"\n        type=\"number\"\n        value={itemWidth}\n        placeholder=\"Item width\"\n        name=\"itemWidth\"\n        onChange={e => {\n          setItemWidth(+e.target.value);\n        }}\n      />\n      <input\n        className=\"input\"\n        type=\"number\"\n        value={frameSize}\n        placeholder=\"Frame size\"\n        name=\"frameSize\"\n        onChange={e => {\n          setFrameSize(+e.target.value);\n        }}\n      />\n      <input\n        className=\"input\"\n        type=\"number\"\n        value={step}\n        placeholder=\"Step\"\n        name=\"Step\"\n        onChange={e => {\n          setStep(+e.target.value);\n        }}\n      />\n      <input\n        className=\"input\"\n        type=\"number\"\n        value={animationDuration}\n        placeholder=\"Animation duration\"\n        name=\"animationDuration\"\n        onChange={e => {\n          setAnimationDuration(+e.target.value);\n        }}\n      />\n\n      <label htmlFor=\"\">\n        Infinite\n        <input\n          className=\"input\"\n          name=\"infinite\"\n          type=\"checkbox\"\n          checked={infinite}\n          onChange={e => {\n            setInfinite(e.target.checked);\n          }}\n        />\n      </label>\n\n      <button\n        type=\"button\"\n        onClick={() => {\n          props.onSetValue({\n            step, frameSize, itemWidth, animationDuration, infinite,\n          });\n        }}\n      >\n        Apply\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport { FormList } from './components/FormList';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst App: React.FC<{}> = () => {\n  const [values, setValues] = useState({\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  });\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">\n        Carousel with\n        {` ${images.length} `}\n        images\n      </h1>\n\n      <FormList\n        step={values.step}\n        frameSize={values.frameSize}\n        itemWidth={values.itemWidth}\n        animationDuration={values.animationDuration}\n        infinite={values.infinite}\n        onSetValue={setValues}\n      />\n\n      <Carousel\n        images={images}\n        step={values.step}\n        frameSize={values.frameSize}\n        itemWidth={values.itemWidth}\n        animationDuration={values.animationDuration}\n        infinite={values.infinite}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}